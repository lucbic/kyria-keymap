// forked from "kyria_example_01.keymap"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// Mouse
// #define ZMK_POINTING_DEFAULT_SCRL_VAL 600 // Default 300
// #include <input/processors.dtsi>
// #include <dt-bindings/zmk/pointing.h>
// #include <dt-bindings/zmk/input_transform.h>

&sl { release-after-ms = <1000>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        mx: layer_tap_FNC {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_FNC";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping_term_ms = <200>;
            bindings = <&mo>, <&sl>;
        };
    };

    combos {
        compatible = "zmk,combos";

        m_left_click {
            bindings = <&mkp LCLK>;
            key-positions = <32 45>;
        };

        m_right_click {
            bindings = <&mkp RCLK>;
            key-positions = <33 46>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | CAPS  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  K    |  O   |   P   |  ^   |
            // | TAB   |A/ALT|S/WIN|D/SFT |F/CTRL|  G   |                                          |  H   |J/CTRL |K/SFT  |L/WIN |;/ALT  |  '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | MO2 | MO1 |  | MO3 | MO4 |  N   |  M     |  ,   |  .    |   /   |  `   |
            //                     |MEDIA | MO6  | DEL  | BSPC| ESC |  | RET |SPACE| TAB  | MO5   |

            bindings = <
&kp ESC        &kp Q           &kp W        &kp E           &kp R               &kp T                                                                          &kp Y    &kp U                &kp I            &kp O        &kp P               &kp CARET
&kp LSHFT      &hm CAPSLOCK A  &mt LCTRL S  &mt LEFT_ALT D  &mt LEFT_COMMAND F  &kp G                                                                          &kp H    &mt RIGHT_COMMAND J  &mt RIGHT_ALT K  &mt RCTRL L  &mt CAPS SEMICOLON  &kp SQT
&kp BACKSLASH  &kp Z           &kp X        &kp C           &kp V               &kp B           &kp LC(LA(LEFT))  &kp RA(RC(RIGHT))  &mkp LCLK    &mkp RCLK    &kp N    &kp M                &kp COMMA        &kp DOT      &kp FSLH            &kp GRAVE
                                            &trans          &msc SCRL_UP        &sk LEFT_SHIFT  &lt 1 BACKSPACE   &lt 2 DELETE       &lt 4 ENTER  &lt 3 SPACE  &kp TAB  &msc SCRL_DOWN       &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;

            label = "Base";
        };

        symbols_layer {
            bindings = <
&trans     &kp LT           &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp NON_US_BACKSLASH                                  &kp SLASH  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp GREATER_THAN  &trans
&kp LSHFT  &kp EXCLAMATION  &kp AT_SIGN     &kp HASH          &kp DOLLAR            &kp MINUS                                             &kp PLUS   &kp PERCENT            &kp CARET          &kp ASTERISK     &kp UNDERSCORE    &kp EQUAL
&trans     &trans           &trans          &trans            &trans                &trans                &trans  &trans  &trans  &trans  &trans     &trans                 &trans             &trans           &trans            &trans
                                            &trans            &trans                &trans                &trans  &trans  &trans  &trans  &trans     &trans                 &trans
            >;

            label = "Symbols";
        };

        num_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | trans | trans | trans | trans | trans | trans |                                        |  /   |  7   |  8   |  9   |  -   | BKSP |
            // | trans |  ALT  |  WIN  |  SFT  |  CTRL | trans |                                        |  *   |  4   |  5   |  6   |  +   | none |
            // | trans | trans | trans | trans | trans | trans | trans | trans |  | trans | trans |  =   |  1   |  2   |  3   |  ENT | trans |
            //                                   | trans | trans | trans | trans | trans | trans |  0   |  .   | trans |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &kp SLASH     &kp N7      &kp N8  &kp N9  &kp MINUS  &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans                                  &kp ASTERISK  &kp N4      &kp N5  &kp N6  &kp PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp EQUAL     &kp N1      &kp N2  &kp N3  &kp ENTER  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp N0        &kp PERIOD  &trans
            >;

            label = "Numbers";
        };

        nav_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | trans | trans | trans | trans | trans | trans |                                        | PGUP | HOME |  UP  | END  | trans | trans |
            // | trans |  ALT  |  WIN  |  SFT  |  CTRL | trans |                                        | PGDN | LEFT | DOWN | RIGHT| trans | trans |
            // | trans | trans | trans | trans | trans | trans | trans | trans |  | trans | trans | trans | trans | trans | trans | trans | trans |
            //                                   | trans | trans | trans | trans | trans | trans | trans | none | trans |

            bindings = <
&trans  &trans  &msc SCRL_LEFT    &kp LA(LG(UP_ARROW))  &msc SCRL_RIGHT    &msc SCRL_UP                                                         &kp PG_UP  &kp HOME  &kp UP    &kp END    &kp LA(UP)    &trans
&trans  &trans  &kp LA(LG(LEFT))  &kp LA(LG(DOWN))      &kp LA(LG(RIGHT))  &msc SCRL_DOWN                                                       &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp LA(DOWN)  &trans
&trans  &trans  &trans            &trans                &trans             &trans          &kp LA(LS(LEFT))  &kp LA(LS(RIGHT))  &trans  &trans  &trans     &trans    &trans    &trans     &trans        &trans
                                  &trans                &trans             &trans          &kp LA(LEFT)      &kp LA(RIGHT)      &trans  &trans  &trans     &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(LEFT) LC(RIGHT)>;
            label = "Navigation";
        };

        special_layer {
            bindings = <
&kp C_SLEEP  &kp F1  &kp F2   &kp F3   &kp F4   &trans                                  &kp C_BRI_INC  &kp C_VOLUME_UP  &kp C_MUTE     &kp C_VOLUME_DOWN  &bl BL_INC      &rgb_ug RGB_BRI
&trans       &kp F5  &kp F6   &kp F7   &kp F8   &trans                                  &kp C_BRI_DEC  &kp C_PREVIOUS   &kp C_PAUSE    &kp C_NEXT         &bl BL_DEC      &rgb_ug RGB_BRD
&trans       &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans  &trans  &trans  &kp C_AC_REDO  &kp C_AC_UNDO    &kp C_AC_COPY  &kp LS(C_AC_CUT)   &kp C_AC_PASTE  &kp PRINTSCREEN
                              &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans         &trans           &trans
            >;
        };
    };
};
